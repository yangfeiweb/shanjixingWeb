<template>
  <div class="unKnowDetail clear">
    <div class="header">
      <nav-header>
        <div slot="title" class="shopping-title">
          <div class='areas'>
            <span class="area-item">{{bookName}}共({{newWord}})条</span>
          </div>
        </div>
      </nav-header>
    </div>
    <div class="book-container">
      <ul class="book-list">

        <li class="list-item" v-for="(item,index) in dataList" :key='index' @click="playAudio(item)">
          <p class="word">
            <span class="word-name">{{item.content1}}</span>
            <span>{{item.content2}}</span>
          </p>
          <div>
            <p>{{item.means[0].chinese}}</p>
            <p>{{item.means[1].english}}</p>
          </div>
          <ul v-for="(dish,idx) in item.examples" :key="idx" style="listStyle:none">
            <li class="case-item">{{dish.case}}</li>
          </ul>

        </li>
      </ul>
    </div>
    <audio autoplay="autoplay" preload="auto" :src="url">
    </audio>
  </div>
</template>
<script>
import VueBetterScroll from "vue2-better-scroll";
import navHeader from "@/components/navHeader";
import _ from "lodash";
import dataService from "@/service/index";
import { ResourcePath } from "../../service/urlConfig";
export default {
  data() {
    return {
      newWord: "",
      bookName: "",
      dataList2: [],
      audioUrl: ResourcePath,
      url: ""
    };
  },
  mounted() {
    this.bookName = this.$route.params.item.name;
    this.newWord = this.$route.params.item.totalWordNotes;
    this.getWordList();
    console.log("---测试用--index", this.$route.params.index);
    // this.$refs.scroll.forceUpdate(true);
  },
  methods: {
    playAudio(val) {
      this.url = "http://192.168.0.22:8888/sjx/public/quick/v" + val.content7;
      console.log(this.url, "----------val");
    },
    getWordList() {
      this.dataList2 = [];
      dataService
        .unKnownWord(0, 200, this.$route.params.item.bookNo, "DEFAULT")
        .then(
          res => {
            let result = res.data;
            let data = result.data;
            let msg = result.msg;
            let code = result.code;
            if (code === 200) {
              this.dataList2 = data.content;
            } else {
              this.$message.error(msg);
            }
          },
          () => {
            this.$message.error("请求错误");
          }
        );
    }
  },
  computed: {
    dataList: function() {
      let words = _.cloneDeep(this.dataList2 || []);
      words.forEach(e => {
        let mean = e.content3.split("<br />");
        let example = e.content4.split("<br />");
        e.means = [{ chinese: mean[1] }, { english: mean[2] }];
        e.examples = [];
        for (let i = 0; i < example.length; i++) {
          e.examples.push({ case: example[i] });
        }
      });
      console.log("---------words", words);
      return words;
    }
  },
  components: {
    navHeader,
    VueBetterScroll
  }
};
</script>
<style lang="scss">
.unKnowDetail {
  width: 100%;
  height: 100%;
  .book-container {
    position: fixed;
    top: 80px;
    left: 0;
    right: 0;
    bottom: 0;
    padding: 10px;
    background: #f7f7f7;
    overflow: auto;
    .book-list {
      width: 100%;
      list-style: none;
      // margin: 0 auto;
      padding: 0 5px;
      .list-item {
        min-height: 120px;
        color: #767676;
        border: 2px solid #ddd;
        padding: 20px 10px;
        margin-bottom: 15px;
        border-radius: 5px;
        background: #ffffff;
        box-shadow: #c2c1c6 1px 2px 1px 2px;
        .word {
          margin-bottom: 30px;
          .word-name {
            font-size: 24px;
            color: #22aefe;
            margin-right: 10px;
          }
        }
        .case-item {
          line-height: 24px;
        }
      }
    }
  }
}
</style>
